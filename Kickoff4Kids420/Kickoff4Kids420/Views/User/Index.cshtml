@using PagedList
@using PagedList.Mvc
@model PagedList.IPagedList<Kickoff4Kids420.Models.UserProfile>

@{
    ViewBag.Title = "Index";
}
<div class="breadcrumbs margin-bottom-40">
    <div class="container">
        <h1 class="pull-left">Participating Students</h1>
    </div>
</div>
<div class="container">
    <div class="panel panel-red">
        <div class="panel-heading">
            <h2 class="panel-title">Students</h2>
        </div>
        <br />
        @using (Html.BeginForm("Index", "User", FormMethod.Get))
        {
            <ul class="list-inline">

                <li>
                    Category: @Html.DropDownList("studentUser", "All")
                <li />
                <li>
                    Search by Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Go!" />
                </li>
                <li>
                    @Html.ActionLink("Add Student", "Create", null, new { @class = "btn-u btn-u" })
                </li>
            </ul>
        }

        <table class="table table-striped table-hover table-bordered">
            <tr>
                <th>
                    @Html.ActionLink("User Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, studentUser = Request.QueryString["studentUser"] })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().EmailAddress)
                </th>
                <th>
                    @Html.ActionLink("Point Total", "Index", new { sortOrder = ViewBag.PointSortParm, currentFilter = ViewBag.CurrentFilter, studentUser = Request.QueryString["studentUser"] })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Schools.SchoolName)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                if (Roles.IsUserInRole(item.UserName, "student"))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailAddress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PointTotal)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Schools.SchoolName)
                        </td>
                        <td>
                            @Html.ActionLink("Completed Activities", "StudentActiviesResult", "ActivityTransaction", new { id = item.UserId }, null) |
                            @Html.ActionLink("Remove User", "Delete", new { id = item.UserId })
                        </td>
                    </tr>
                }
            }

        </table>


    </div>
</div>
<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, studentUser = Request.QueryString["studentUser"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
</div>